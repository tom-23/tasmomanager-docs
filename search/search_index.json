{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TasmoManager Welcome to the TasmoManager docs! Here, you will find information/help on getting started, installation and troubleshooting. Found a Bug Submit it here and I'll do my best to get it sorted! Got a Feature? I'm always looking to make TasmoManager better. Submit it via GitHub issues (link here ) and I'll look into getting it implemented! Useful links Here is a list of useful links that may be of interest: GitHub Page Latest Releases CI / AppVeyor Tasmota","title":"Home"},{"location":"#tasmomanager","text":"Welcome to the TasmoManager docs! Here, you will find information/help on getting started, installation and troubleshooting.","title":"TasmoManager"},{"location":"#found-a-bug","text":"Submit it here and I'll do my best to get it sorted!","title":"Found a Bug"},{"location":"#got-a-feature","text":"I'm always looking to make TasmoManager better. Submit it via GitHub issues (link here ) and I'll look into getting it implemented!","title":"Got a Feature?"},{"location":"#useful-links","text":"Here is a list of useful links that may be of interest: GitHub Page Latest Releases CI / AppVeyor Tasmota","title":"Useful links"},{"location":"getting-started/","text":"Inital Setup Once you have installed TasmoManager, firstly press on the connect button to open up the preferences window. Here, click on \"MQTT Servers\" and add an MQTT Server by pressing the green plus button. Fill out the required information and click on Save Changes. Then, close the preferences dialog and click on the connect button once again. Select the MQTT server you just added and click on connect. You should start to see devices appearing in the device list. Things to note You MUST have either HASS Discovery enabled ( SetOption19 0 ) or firmware compiled with USE_TASMOTA_DISCOVERY . More Info: troubleshooting .","title":"Inital Setup"},{"location":"getting-started/#inital-setup","text":"Once you have installed TasmoManager, firstly press on the connect button to open up the preferences window. Here, click on \"MQTT Servers\" and add an MQTT Server by pressing the green plus button. Fill out the required information and click on Save Changes. Then, close the preferences dialog and click on the connect button once again. Select the MQTT server you just added and click on connect. You should start to see devices appearing in the device list.","title":"Inital Setup"},{"location":"getting-started/#things-to-note","text":"You MUST have either HASS Discovery enabled ( SetOption19 0 ) or firmware compiled with USE_TASMOTA_DISCOVERY . More Info: troubleshooting .","title":"Things to note"},{"location":"installation/","text":"Installation Thanks for downloading TasmoManager! Since one of the main goals of this project was to make it beginner-friendly, I've created a windows installer and macOS .dmg for easy installation. macOS On macOS, simply download the .dmg release file, open it up and click and drag the app package into the Applications directory. When opening the app from the launchpad, you may encounter a pop-up, preventing you from opening TasmoManager. To work around this, right-click and open the app from the Applications directory. You can also download the .pkg file and follow the on-screen instructions when installing. Be sure to right-click and open the pkg otherwise you won't get an option allowing you to open the file Windows Download the installer executable and run. Windows might pop up a smart screen message (in the process of getting that removed), if so click on More Info > Allow. Then, follow the on-screen instructions. Linux There are two types of packages you can install on Linux. Using apt You can install TasmoManager using the precompiled .deb package. Firstly, download the latest version of TasmoManager fr from the GitHub releases page : Example: wget https://github.com/tom-23/TasmoManager/releases/download/v1.0.0-alpha.11/tasmomanager_20210412-v1.0.0-alpha.11_amd64.deb Once downloaded, install the package using the apt command (be sure to run as super user): sudo apt install ./tasmomanager_20210412-v1.0.0-alpha.11_amd64.deb You should see a new icon appear in your app launcher. Using rpm Download the rpm package from the GitHub releases page and install using the following command: sudo rpm -i tasmomanager_20210412-v1.0.0-alpha.11_amd64.rpm --no-deps Updating You can update TasmoManager the same way in macOS or Windows. Firstly, head over to the app's preferences and click on \"Software Update\". Next, select the update channel you would like to receive updates from (default is \"Stable\"). If there is a new update to be installed, a green \"Begin Software Update\" button should appear. Once pressed, TasmoManager will download the update and begin installing it onto your system. Please ensure you enter your administrator password when you are presented to do so otherwise the update process will not begin. (This only applies to TasmoManager v1.0.0-alpha.5 and above). Building Only attempt if you have some knowledge when working with CMake / C++ projects! I'll try to go in-depth in this tutorial but it's not 100% foolproof. Optionally, you can build TasmoManager from source. You'll need the following prerequisites: Git SCM Perl CMake build system A Windows, macOS or Linux computer A C++ 17 compatible compiler (clang, MSVC, GCC) Qt 5.12.0 or newer ( Qt 6 is currently not supported ) Qt bin directory in your system PATH OpenSSL The following prerequisites are optional: InnoSetup (to create a Windows installer package) create-dmg (to create a macOS DMG disk image. Install: npm install --global create-dmg ) CPack (to create Linux Packages) Firstly take note of you're Qt install path. On Windows, Qt installs to the C:\\Qt directory followed by the Qt version installed. On macOS and Linux, Qt should be installed in you're home area. On macOS, Qt would be installed at: /Users/username/Qt and on Linux: /home/username/Qt . Next, clone the TasmoManager repo and clone the submodules recursively: git clone https://github.com/tom-23/TasmoManager.git git submodule update --init --recursive First we need to build and install qmqtt. Enter the qmqtt directory and create an empty build folder: cd lib/qmqtt mkdir build && cd build Assuming you have qmake in your path, configure the project and build: qmake .. make -j4 Once the project has successfully built, install via the following command: sudo make install You'll only need to compile and install QMQTT once Inside the TasmoManager repo directory, create a new folder named build and enter it: mkdir build && cd build/ Make sure you have set the OPENSSL_ROOT_DIR system variable to your OpenSSL installation directory. On macOS, the command would look something like this: export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\" Run CMake passing the following parameters substituting path_to_qt with the path to your qt installation: cmake .. -DCMAKE_PREFIX_PATH=\"path_to_qt\" Next, build using the make command: make -j4","title":"Installation"},{"location":"installation/#installation","text":"Thanks for downloading TasmoManager! Since one of the main goals of this project was to make it beginner-friendly, I've created a windows installer and macOS .dmg for easy installation.","title":"Installation"},{"location":"installation/#macos","text":"On macOS, simply download the .dmg release file, open it up and click and drag the app package into the Applications directory. When opening the app from the launchpad, you may encounter a pop-up, preventing you from opening TasmoManager. To work around this, right-click and open the app from the Applications directory. You can also download the .pkg file and follow the on-screen instructions when installing. Be sure to right-click and open the pkg otherwise you won't get an option allowing you to open the file","title":"macOS"},{"location":"installation/#windows","text":"Download the installer executable and run. Windows might pop up a smart screen message (in the process of getting that removed), if so click on More Info > Allow. Then, follow the on-screen instructions.","title":"Windows"},{"location":"installation/#linux","text":"There are two types of packages you can install on Linux.","title":"Linux"},{"location":"installation/#using-apt","text":"You can install TasmoManager using the precompiled .deb package. Firstly, download the latest version of TasmoManager fr from the GitHub releases page : Example: wget https://github.com/tom-23/TasmoManager/releases/download/v1.0.0-alpha.11/tasmomanager_20210412-v1.0.0-alpha.11_amd64.deb Once downloaded, install the package using the apt command (be sure to run as super user): sudo apt install ./tasmomanager_20210412-v1.0.0-alpha.11_amd64.deb You should see a new icon appear in your app launcher.","title":"Using apt"},{"location":"installation/#using-rpm","text":"Download the rpm package from the GitHub releases page and install using the following command: sudo rpm -i tasmomanager_20210412-v1.0.0-alpha.11_amd64.rpm --no-deps","title":"Using rpm"},{"location":"installation/#updating","text":"You can update TasmoManager the same way in macOS or Windows. Firstly, head over to the app's preferences and click on \"Software Update\". Next, select the update channel you would like to receive updates from (default is \"Stable\"). If there is a new update to be installed, a green \"Begin Software Update\" button should appear. Once pressed, TasmoManager will download the update and begin installing it onto your system. Please ensure you enter your administrator password when you are presented to do so otherwise the update process will not begin. (This only applies to TasmoManager v1.0.0-alpha.5 and above).","title":"Updating"},{"location":"installation/#building","text":"Only attempt if you have some knowledge when working with CMake / C++ projects! I'll try to go in-depth in this tutorial but it's not 100% foolproof. Optionally, you can build TasmoManager from source. You'll need the following prerequisites: Git SCM Perl CMake build system A Windows, macOS or Linux computer A C++ 17 compatible compiler (clang, MSVC, GCC) Qt 5.12.0 or newer ( Qt 6 is currently not supported ) Qt bin directory in your system PATH OpenSSL The following prerequisites are optional: InnoSetup (to create a Windows installer package) create-dmg (to create a macOS DMG disk image. Install: npm install --global create-dmg ) CPack (to create Linux Packages) Firstly take note of you're Qt install path. On Windows, Qt installs to the C:\\Qt directory followed by the Qt version installed. On macOS and Linux, Qt should be installed in you're home area. On macOS, Qt would be installed at: /Users/username/Qt and on Linux: /home/username/Qt . Next, clone the TasmoManager repo and clone the submodules recursively: git clone https://github.com/tom-23/TasmoManager.git git submodule update --init --recursive First we need to build and install qmqtt. Enter the qmqtt directory and create an empty build folder: cd lib/qmqtt mkdir build && cd build Assuming you have qmake in your path, configure the project and build: qmake .. make -j4 Once the project has successfully built, install via the following command: sudo make install You'll only need to compile and install QMQTT once Inside the TasmoManager repo directory, create a new folder named build and enter it: mkdir build && cd build/ Make sure you have set the OPENSSL_ROOT_DIR system variable to your OpenSSL installation directory. On macOS, the command would look something like this: export OPENSSL_ROOT_DIR=\"/usr/local/opt/openssl@1.1\" Run CMake passing the following parameters substituting path_to_qt with the path to your qt installation: cmake .. -DCMAKE_PREFIX_PATH=\"path_to_qt\" Next, build using the make command: make -j4","title":"Building"},{"location":"troubleshooting/","text":"Troubleshooting If you have any issues whilst using TasmoManager, please look at this page before submitting a github issue. No devices show up Ensure that you have the following: Tasmota version that supports device discovery Make sure that the tasmota version installed on your devices includes the new home assistant discovery protocol. If you have tasmota-lite installed, you will NOT have home assistant discovery compiled by default. SetOption19 set to 0 Have SetOption19 set to 0 to ensure the new home assistant discovery protocol is used. You can change this in the WebUI by opening up the console and entering SetOption19 0 . The device should start to appear in the device list after a few seconds. MQTT Server which prevents read / write access TasmoManager needs to read data from the tasmota/discovery . Make sure you are able to Read/Write data using an MQTT client such as MQTTExplorer. Make sure your MQTT server isn't sonoff-adapter (for iobroker) as it doesn't allow for client read access. tasmota/discovery topic deleted The tasmota discovery topic could have been deleted. This can easily be fixed by restarting the devices connected to the MQTT server. Old devices still exist This is caused by the device's discovery topic still being retained on the MQTT server. You can either delete the topic from the server using an MQTT client or hide offline devices in TasmoManager (Settings > General > Show Offline Devices).","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"If you have any issues whilst using TasmoManager, please look at this page before submitting a github issue.","title":"Troubleshooting"},{"location":"troubleshooting/#no-devices-show-up","text":"Ensure that you have the following: Tasmota version that supports device discovery Make sure that the tasmota version installed on your devices includes the new home assistant discovery protocol. If you have tasmota-lite installed, you will NOT have home assistant discovery compiled by default. SetOption19 set to 0 Have SetOption19 set to 0 to ensure the new home assistant discovery protocol is used. You can change this in the WebUI by opening up the console and entering SetOption19 0 . The device should start to appear in the device list after a few seconds. MQTT Server which prevents read / write access TasmoManager needs to read data from the tasmota/discovery . Make sure you are able to Read/Write data using an MQTT client such as MQTTExplorer. Make sure your MQTT server isn't sonoff-adapter (for iobroker) as it doesn't allow for client read access. tasmota/discovery topic deleted The tasmota discovery topic could have been deleted. This can easily be fixed by restarting the devices connected to the MQTT server.","title":"No devices show up"},{"location":"troubleshooting/#old-devices-still-exist","text":"This is caused by the device's discovery topic still being retained on the MQTT server. You can either delete the topic from the server using an MQTT client or hide offline devices in TasmoManager (Settings > General > Show Offline Devices).","title":"Old devices still exist"},{"location":"using-tasmomanager/","text":"General Usage Once connected to a server, click on a device to view its basic properties and controls (to the right of the window). You can edit the name and friendly name of a device by changing the text in the desired fields on the right and save by clicking on the green checkmark. To revert, click on the orange undo button beside it. Firmware Upgrade TasmoManager has the ability to update firmware on multiple devices at once. To do this, connect to an MQTT server and click on the Firmware Update button. Click next on the dialog and select the devices you would like to upgrade. Pressing cmd + a or ctrl + a will select / deselect all devices in the list. Then, click on next and select the OTA server you would like to use. Be sure you select the type of binary you want to upgrade to if you're using the ota.tasmota.com server. Then click on next, read the message and click on Begin Update to start updating the selected devices.","title":"General Usage"},{"location":"using-tasmomanager/#general-usage","text":"Once connected to a server, click on a device to view its basic properties and controls (to the right of the window). You can edit the name and friendly name of a device by changing the text in the desired fields on the right and save by clicking on the green checkmark. To revert, click on the orange undo button beside it.","title":"General Usage"},{"location":"using-tasmomanager/#firmware-upgrade","text":"TasmoManager has the ability to update firmware on multiple devices at once. To do this, connect to an MQTT server and click on the Firmware Update button. Click next on the dialog and select the devices you would like to upgrade. Pressing cmd + a or ctrl + a will select / deselect all devices in the list. Then, click on next and select the OTA server you would like to use. Be sure you select the type of binary you want to upgrade to if you're using the ota.tasmota.com server. Then click on next, read the message and click on Begin Update to start updating the selected devices.","title":"Firmware Upgrade"}]}